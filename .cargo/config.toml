# Set macOS deployment target to avoid linker warnings
# Use Rust project defaults: 10.12 for x86_64, 11.0 for aarch64
[target.x86_64-apple-darwin.env]
MACOSX_DEPLOYMENT_TARGET = "10.12"

[target.aarch64-apple-darwin.env]
MACOSX_DEPLOYMENT_TARGET = "11.0"

[target.x86_64-pc-windows-msvc]
rustflags = ["-C", "link-arg=/DEBUG:FASTLINK"]

[target.aarch64-pc-windows-msvc]
rustflags = ["-C", "link-arg=/DEBUG:FASTLINK"]

# Build optimizations for faster development builds
[build]
# Use more parallel jobs for faster compilation
jobs = 8

# Incremental compilation for faster rebuilds (enabled by default for debug)
incremental = true

[profile.dev]
# Reduce debug info to speed up compilation
debug = 1
# Split debuginfo reduces linker memory usage and can speed up linking
split-debuginfo = "unpacked"

[profile.dev.build-override]
# Optimize build scripts and proc macros even in dev mode
opt-level = 3

# Note: Fast linker (lld) configuration is handled by the nix flake via RUSTFLAGS environment variable
# This avoids conflicts with the nix environment's library paths
